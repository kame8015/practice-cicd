AWSTemplateFormatVersion: 2010-09-09
Description: Computing Resources Template

Parameters:
  KeyName:
    Description: input EC2 KeyName
    Type: AWS::EC2::KeyPair::KeyName

Resources:
  # VPC
  testVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: testVPC
  # InternetGateway
  testIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: testIGW

  # RouteTable
  PublicRoute:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref testVPC
      Tags:
        - Key: Name
          Value: PublicRoute

  # Route
  Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRoute
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref testIGW

  # VPC Gateway Attachment
  AttachIGW:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref testVPC
      InternetGatewayId: !Ref testIGW

  # Subnet
  testSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      # AvailabilityZone: ap-northeast-1a
      CidrBlock: 10.0.0.0/24
      VpcId: !Ref testVPC
      Tags:
        - Key: Name
          Value: testSubnet

  # Subnet RouteTable Association
  testSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRoute
      SubnetId: !Ref testSubnet

  # SecurityGroup
  testSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref testVPC
      GroupDescription: testIGW
      SecurityGroupIngress:
        # Ingress for connecting with ssh
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: testSG

  # EC2 Instance
  testEC2:
    Type: AWS::EC2::Instance
    Properties:
      # AvailabilityZone: ap-northeast-1a
      ImageId: ami-0abaa5b0faf689830  # Amazon Linux2 Latest
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      SubnetId: !Ref testSubnet
      SecurityGroupIds:
        - !Ref testSG
      IamInstanceProfile: !Ref S3AccessInstanceProfile
      UserData:
        Fn::Base64: |
          #!/bin/bash
          # 依存ライブラリインポート
          sudo yum update
          sudo yum install -y ruby wget bzip2 bzip2-devel gcc git libffi-devel make openssl openssl-devel readline readline-devel sqlite sqlite-devel zlib-devel git

          # CodeDeploy Agentインストール
          cd /home/ec2-user
          wget https://aws-codedeploy-ap-northeast-1.s3.ap-northeast-1.amazonaws.com/latest/install
          sudo chmod +x ./install
          ./install auto

          # pyenvインストール
          sudo su -
          git clone https://github.com/yyuu/pyenv.git ~/.pyenv

          # ~/.bashrc編集
          cat << 'EOS' >> ~/.bashrc

          # Settings for pyenv
          export PYENV_ROOT="$HOME/.pyenv"
          export PATH="$PYENV_ROOT/bin:$PATH"
          eval "$(pyenv init --path)"

          # Alias for Python
          alias python="python3"
          alias pip="pip3"
          EOS

          # openssl v1.1.1 インストール
          curl https://www.openssl.org/source/openssl-1.1.1.tar.gz -o /usr/local/src/openssl-1.1.1.tar.gz
          cd /usr/local/src
          tar xvzf openssl-1.1.1.tar.gz
          cd openssl-1.1.1
          ./config --prefix=/usr/local/openssl-1.1.1 shared zlib
          make
          make install
          cat << 'EOS' >> /etc/ld.so.conf.d/openssl-1.1.1.conf
          /usr/local/openssl-1.1.1/lib/
          EOS
          ldconfig
      Tags:
        - Key: Name
          Value: testEC2

  # Elastic IP
  testEIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref testEC2

  # IAM Role
  S3AccessRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /

  # IAM Policy
  S3AccessPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: s3access
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:ListAllMyBuckets
              - s3:GetBucketLocation
            Resource: arn:aws:s3:::*
          # Prefixにkameがつくものはフルアクセス
          - Effect: Allow
            Action:
              - "*"
            Resource:
              - arn:aws:s3:::kame-*
      Roles:
        - !Ref S3AccessRole

  # IAM Instance Profile
  S3AccessInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref S3AccessRole
      Path: /